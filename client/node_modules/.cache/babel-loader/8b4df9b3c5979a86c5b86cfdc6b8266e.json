{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atul\\\\Desktop\\\\crick8\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    FullName: '',\n    Role: '',\n    About: '',\n    Nickname: '',\n    Nationality: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      FullName: '',\n      Role: '',\n      About: '',\n      Nickname: '',\n      Nationality: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //console.log(currentId);\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history)); // ch\n\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"please Sign In to Add your favourite cricketers and rate them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      elevation: 6,\n      className: `${classes.form} ${classes}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\" \", currentId ? 'Edit' : 'Add', \" your FAV cricketer \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"FullName\",\n        variant: \"outlined\",\n        label: \"FullName\",\n        fullWidth: true,\n        value: postData.FullName,\n        onChange: e => setPostData({ ...postData,\n          FullName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"Role\",\n        variant: \"outlined\",\n        label: \"Role\",\n        fullWidth: true,\n        value: postData.Role,\n        onChange: e => setPostData({ ...postData,\n          Role: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"About\",\n        variant: \"outlined\",\n        label: \"About\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.About,\n        onChange: e => setPostData({ ...postData,\n          About: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"Nickname\",\n        variant: \"outlined\",\n        label: \"tags(seperated by comas)\",\n        fullWidth: true,\n        value: postData.Nickname,\n        onChange: e => setPostData({ ...postData,\n          Nickname: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"Nationality\",\n        variant: \"outlined\",\n        label: \"Description\",\n        fullWidth: true,\n        value: postData.Nationality,\n        onChange: e => setPostData({ ...postData,\n          Nationality: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: [/*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 40\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \" Clear \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Form, \"eMkkIV5c+FxOeXoY1ny8PBI4qJo=\", false, function () {\n  return [useSelector, useStyles, useDispatch, useHistory];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/atul/Desktop/crick8/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useHistory","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","FullName","Role","About","Nickname","Nationality","selectedFile","post","state","posts","find","p","_id","classes","user","JSON","parse","localStorage","getItem","dispatch","history","clear","handleSubmit","e","preventDefault","name","result","paper","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom'; \r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId }) =>{\r\n\tconst [postData, setPostData] = useState({ FullName: '', Role: '', About: '', Nickname: '', Nationality: '', selectedFile: '' });\r\n\tconst post = useSelector((state) => (currentId ? state.posts.posts.find((p) => p._id === currentId) : null));\r\n\t\r\n\tconst classes = useStyles();\r\n\tconst user = JSON.parse(localStorage.getItem('profile'));\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory(); \r\n\r\n\tuseEffect(() => {\r\n\t\tif(post) setPostData(post);\r\n\t}, [post])\r\n\r\n\tconst clear = () => {\r\n\t\tsetCurrentId(null);\r\n\t\tsetPostData({ FullName: '', Role: '', About: '', Nickname: '', Nationality: '', selectedFile: '' });\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t//console.log(currentId);\r\n\t\tif(currentId === 0){ \r\n\t\t\tdispatch(createPost({...postData, name: user?.result?.name  }, history));  // ch\r\n\t\t\tclear();\r\n\t\t} else {\r\n\t\t\tdispatch(updatePost(currentId, {...postData, name: user?.result?.name  }));\r\n\t\t\tclear();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\tif(!(user?.result?.name)){\r\n\t\treturn(\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<Typography variant=\"h6\" align=\"center\">\r\n\t\t\t\t\tplease Sign In to Add your favourite cricketers and rate them.\r\n\t\t\t\t</Typography>\r\n\t\t\t</Paper>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.paper}>\r\n\t\t\t<form autoComplete=\"off\" noValidate elevation={6} className={`${classes.form} ${classes}`} onSubmit={handleSubmit}>\r\n\t\t\t\t<Typography variant=\"h6\"> {currentId ? 'Edit' : 'Add'} your FAV cricketer </Typography>\r\n\t\t\t\t<TextField name=\"FullName\" variant=\"outlined\" label=\"FullName\" fullWidth value={postData.FullName} onChange={(e)=> setPostData({ ...postData, FullName: e.target.value })}/>\r\n\t\t\t\t<TextField name=\"Role\" variant=\"outlined\" label=\"Role\" fullWidth value={postData.Role} onChange={(e)=> setPostData({ ...postData, Role: e.target.value })}/>\r\n\t\t\t\t<TextField name=\"About\" variant=\"outlined\" label=\"About\" fullWidth multiline rows={4} value={postData.About} onChange={(e)=> setPostData({ ...postData, About: e.target.value })}/>\r\n\t\t\t\t<TextField name=\"Nickname\" variant=\"outlined\" label=\"tags(seperated by comas)\" fullWidth value={postData.Nickname} onChange={(e)=> setPostData({ ...postData, Nickname: e.target.value.split(',') })}/>\r\n\t\t\t\t<TextField name=\"Nationality\" variant=\"outlined\" label=\"Description\" fullWidth value={postData.Nationality} onChange={(e)=> setPostData({ ...postData, Nationality: e.target.value })}/>\r\n\t\t\t\t<div className={classes.fileInput}><FileBase type= \"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile:base64}) } /> </div>\r\n\t\t\t\t<Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth> Submit </Button>\r\n\t\t\t\t<Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth> Clear </Button>\r\n\t\t\t</form>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}