{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, START_LOADING, END_LOADING, CREATE, UPDATE, LIKE, DELETE, FETCH_BY_SEARCH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id); //console.log(data);\n\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    }); // ch\n\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const createPost = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    history.push(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/atul/Desktop/crick8/client/src/actions/posts.js"],"names":["FETCH_ALL","FETCH_POST","START_LOADING","END_LOADING","CREATE","UPDATE","LIKE","DELETE","FETCH_BY_SEARCH","api","getPost","id","dispatch","type","data","fetchPost","payload","error","console","log","message","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","e","createPost","post","history","push","_id","updatePost","deletePost","likePost"],"mappings":"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","sourcesContent":["import { FETCH_ALL, FETCH_POST, START_LOADING, END_LOADING, CREATE, UPDATE, LIKE, DELETE, FETCH_BY_SEARCH } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({type: START_LOADING});\r\n    const { data } = await api.fetchPost(id);\r\n\r\n    //console.log(data);\r\n\r\n    dispatch({ type: FETCH_POST, payload: data });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch({type: START_LOADING});  // ch\r\n    const { data } = await api.fetchPosts(page);\r\n\r\n    console.log(data);\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n  try {\r\n    dispatch({type: START_LOADING});\r\n\r\n    const { data : {data}} = await api.fetchPostsBySearch(searchQuery);\r\n\r\n    dispatch({ type: FETCH_BY_SEARCH , payload: data });\r\n    dispatch({ type: END_LOADING });\r\n  } catch(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport const createPost = (post, history) => async (dispatch) => {\r\n  try {\r\n    dispatch({type: START_LOADING});\r\n    \r\n    const { data } = await api.createPost(post);\r\n    history.push(`/posts/${data._id}`); \r\n    dispatch({ type: CREATE, payload: data });\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n    dispatch({ type: DELETE, payload: id })\r\n  } catch(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likePost(id);\r\n\r\n    dispatch( { type: LIKE, payload: data } );\r\n  } catch(error) {\r\n    console.log(error);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}