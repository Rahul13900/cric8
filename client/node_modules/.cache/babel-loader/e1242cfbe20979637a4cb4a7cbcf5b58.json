{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, START_LOADING, END_LOADING, FETCH_BY_SEARCH, UPDATE, CREATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id != action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/atul/Desktop/crick8/client/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_POST","START_LOADING","END_LOADING","FETCH_BY_SEARCH","UPDATE","CREATE","DELETE","LIKE","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,aAAhC,EAA+CC,WAA/C,EAA4DC,eAA5D,EAA6EC,MAA7E,EAAqFC,MAArF,EAA6FC,MAA7F,EAAqGC,IAArG,QAAiH,0BAAjH;AACA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAC,IAAZ;AAAkBC,EAAAA,KAAK,EAAC;AAAxB,CAAT,EAAwCC,MAAxC,KAAmD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKX,aAAL;AACC,aAAO,EAAC,GAAGO,KAAJ;AAAWC,QAAAA,SAAS,EAAC;AAArB,OAAP;;AACD,SAAKP,WAAL;AACC,aAAO,EAAC,GAAGM,KAAJ;AAAWC,QAAAA,SAAS,EAAC;AAArB,OAAP;;AACD,SAAKV,SAAL;AACC,aAAO,EACN,GAAGS,KADG;AAENE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFhB;AAGNC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHtB;AAINC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJxB,OAAP;;AAMD,SAAKb,eAAL;AACC,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAA1B,OAAP;;AACD,SAAKb,UAAL;AACC,aAAO,EAAE,GAAGQ,KAAL;AAAYS,QAAAA,IAAI,EAAEN,MAAM,CAACE;AAAzB,OAAP;;AACD,SAAKN,IAAL;AACC,aAAQ,EAAE,GAAGC,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA7E;AAAnB,OAAR;;AACD,SAAKZ,MAAL;AACC,aAAO,EAAC,GAAGG,KAAJ;AAAWE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAlB,OAAP;;AACD,SAAKT,MAAL;AACC,aAAQ,EAAC,GAAGI,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA7E;AAAlB,OAAR;;AACD,SAAKX,MAAL;AACC,aAAQ,EAAC,GAAGE,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,IAAYR,MAAM,CAACE,OAAhD;AAAlB,OAAR;;AACD;AACC,aAAQL,KAAR;AAzBF;AA2BA,CA5BD","sourcesContent":["import { FETCH_ALL, FETCH_POST, START_LOADING, END_LOADING, FETCH_BY_SEARCH, UPDATE, CREATE, DELETE, LIKE } from '../constants/actionTypes';\r\nexport default (state = { isLoading:true, posts:[] } , action) => {\r\n\tswitch (action.type) {\r\n\t\tcase START_LOADING:\r\n\t\t\treturn {...state, isLoading:true};\r\n\t\tcase END_LOADING: \r\n\t\t\treturn {...state, isLoading:false};\r\n\t\tcase FETCH_ALL :\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tposts: action.payload.data,\r\n\t\t\t\tcurrentPage: action.payload.currentPage,\r\n\t\t\t\tnumberOfPages: action.payload.numberOfPages,\r\n\t\t\t}\r\n\t\tcase FETCH_BY_SEARCH :\r\n\t\t\treturn { ...state, posts: action.payload };\r\n\t\tcase FETCH_POST:\r\n\t\t\treturn { ...state, post: action.payload };\r\n\t\tcase LIKE :\r\n\t\t\treturn  { ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post)};\r\n\t\tcase CREATE :\r\n\t\t\treturn {...state, posts: [...state.posts, action.payload]};\r\n\t\tcase UPDATE :\r\n\t\t\treturn  {...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post)};\r\n\t\tcase DELETE :\r\n\t\t\treturn  {...state, posts: state.posts.filter((post) => post._id != action.payload)};\r\n\t\tdefault:\r\n\t\t\treturn  state;\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}