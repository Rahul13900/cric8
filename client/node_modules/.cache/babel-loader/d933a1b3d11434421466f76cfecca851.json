{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\atul\\\\Desktop\\\\crick8\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Avatar, Paper, Typography, Grid, Button, Container, TextField, Divider } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './input';\nimport { signin, signup } from '../../actions/auth';\nimport useStyles from './styles';\nimport Icon from './icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIssignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n\n    if (isSignup) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    }\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIssignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log('Google Sign In was unsuccessful. Try again later');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\" \", isSignup ? \"Sign Up\" : \"Sign In\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"235025116846-mn1l0ocs6vn240spbm36sevrd0ahm5cm.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            title: \"clean browser cache incase auth failed\",\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 195\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 8\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: switchMode,\n            children: [\" \", isSignup ? 'Already have an account? Sign In' : \"don't have an account? Sign Up\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Auth, \"1jucOTS7G2YSN89nzv5ANnZDFyU=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/atul/Desktop/crick8/client/src/components/Auth/Auth.js"],"names":["React","useState","useEffect","Avatar","Paper","Typography","Grid","Button","Container","TextField","Divider","GoogleLogin","useDispatch","useHistory","LockOutlinedIcon","Input","signin","signup","useStyles","Icon","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignup","setIssignup","formData","setFormData","dispatch","history","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","console","log","handleChange","target","name","value","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Avatar, Paper, Typography, Grid, Button, Container, TextField, Divider } from '@material-ui/core';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Input from './input';\r\nimport { signin, signup} from '../../actions/auth';\r\nimport useStyles from './styles';\r\nimport Icon from './icon';\r\n\r\nconst initialState = {firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\r\n\r\nconst Auth = () => {\r\n\tconst classes = useStyles();\r\n\tconst [showPassword, setShowPassword] = useState(false);\r\n\tconst [isSignup, setIssignup] = useState(false);\r\n\tconst [formData, setFormData] = useState(initialState);\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(formData);\r\n\t\tif(isSignup){\r\n\t\t\tdispatch(signup(formData, history));   \r\n\t\t} else {\r\n\t\t\tdispatch(signin(formData, history));\r\n\t\t}\r\n\t}\r\n\tconst handleChange = (e) => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value })\r\n\t}\r\n\tconst switchMode = () => {\r\n\t\tsetIssignup((prevIsSignup) => !prevIsSignup) ;\r\n\t\tsetShowPassword(false);\r\n\t}\r\n\tconst googleSuccess = async (res) => {\r\n\t\tconst result = res?.profileObj;\r\n\t\tconst token = res?.tokenId;\r\n\r\n\t\ttry {\r\n\t\t\tdispatch({ type: 'AUTH', data: {result, token} });\r\n\r\n\t\t\thistory.push('/');\r\n\t\t} catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\tconst googleFailure = () => {\r\n\t\tconsole.log('Google Sign In was unsuccessful. Try again later')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<Paper className={classes.paper} elevation={3}>\r\n\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t</Avatar>\r\n\t\t\t\t<Typography variant=\"h5\"> { isSignup ? \"Sign Up\" : \"Sign In\" } </Typography>\r\n\t\t\t\t<form className={classes.form} onSubmit= {handleSubmit}>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisSignup && (\r\n\t\t\t\t\t\t\t\t<>   \r\n\t\t\t\t\t\t\t\t\t<Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n\t\t\t\t\t\t\t\t\t<Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange}  half/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\"/>\r\n\t\t\t\t\t\t<Input name=\"password\" label =\"Password\" handleChange={handleChange} type={showPassword? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\r\n\t\t\t\t\t\t{ isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Button type=\"submit\" fullWidth variant=\"contained\" color =\"primary\" className={classes.submit} >\r\n\t\t\t\t\t\t{ isSignup ? 'Sign Up' : 'Sign In' }\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<GoogleLogin\r\n\t\t\t\t\t\tclientId = '235025116846-mn1l0ocs6vn240spbm36sevrd0ahm5cm.apps.googleusercontent.com'\r\n\t\t\t\t\t\trender= { (renderProps) => (\r\n\t\t\t\t\t\t\t<Button className={classes.googleButton} title=\"clean browser cache incase auth failed\" color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\r\n\t\t\t\t\t\t\t\tGoogle Sign In\r\n\t\t\t\t\t\t\t</Button>\t\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tonSuccess = {googleSuccess}\r\n\t\t\t\t\t\tonFailure = {googleFailure}\r\n\t\t\t\t\t\tcookiePolicy=\"single_host_origin\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Grid container justify=\"flex-end\">\r\n\t\t\t\t\t\t<Button onClick={switchMode} > {isSignup? 'Already have an account? Sign In' : \"don't have an account? Sign Up\"} </Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</form>\r\n\t\t\t</Paper>\r\n\t\t</Container> \r\n\t)\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"module"}